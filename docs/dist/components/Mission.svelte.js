import './Mission.svelte.css';
/* src/components/Mission.svelte generated by Svelte v3.38.2 */
import {
	SvelteComponent,
	append,
	attr,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	safe_not_equal,
	space,
	text,
	transition_in,
	transition_out
} from "svelte/internal";

import "./lib/theme.css";
import Text from "./lib/Text.svelte.js";
import { TextSize } from "./lib/types.js";
import Carat from "./Carat.svelte.js";

function create_default_slot_1(ctx) {
	let t;

	return {
		c() {
			t = text("We invest in early-stage, profit-oriented platforms that directly and indirectly solve the climate crisis.");
		},
		m(target, anchor) {
			insert(target, t, anchor);
		},
		d(detaching) {
			if (detaching) detach(t);
		}
	};
}

// (11:1) <Text size={TextSize.Aside} class="box bottom">
function create_default_slot(ctx) {
	let t;

	return {
		c() {
			t = text("The SNØCAP ecosystem sources and supports the world’s best founding teams.");
		},
		m(target, anchor) {
			insert(target, t, anchor);
		},
		d(detaching) {
			if (detaching) detach(t);
		}
	};
}

function create_fragment(ctx) {
	let section;
	let text0;
	let t0;
	let text1;
	let t1;
	let carat;
	let current;

	text0 = new Text({
			props: {
				size: TextSize.Header,
				class: "box top",
				$$slots: { default: [create_default_slot_1] },
				$$scope: { ctx }
			}
		});

	text1 = new Text({
			props: {
				size: TextSize.Aside,
				class: "box bottom",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			}
		});

	carat = new Carat({ props: { fragment: "testimonials" } });

	return {
		c() {
			section = element("section");
			create_component(text0.$$.fragment);
			t0 = space();
			create_component(text1.$$.fragment);
			t1 = space();
			create_component(carat.$$.fragment);
			attr(section, "id", "mission");
			attr(section, "data-header-content", "Powering platforms for <br/> a better climate future.");
			attr(section, "class", "svelte-12vgd04");
		},
		m(target, anchor) {
			insert(target, section, anchor);
			mount_component(text0, section, null);
			append(section, t0);
			mount_component(text1, section, null);
			append(section, t1);
			mount_component(carat, section, null);
			current = true;
		},
		p(ctx, [dirty]) {
			const text0_changes = {};

			if (dirty & /*$$scope*/ 1) {
				text0_changes.$$scope = { dirty, ctx };
			}

			text0.$set(text0_changes);
			const text1_changes = {};

			if (dirty & /*$$scope*/ 1) {
				text1_changes.$$scope = { dirty, ctx };
			}

			text1.$set(text1_changes);
		},
		i(local) {
			if (current) return;
			transition_in(text0.$$.fragment, local);
			transition_in(text1.$$.fragment, local);
			transition_in(carat.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(text0.$$.fragment, local);
			transition_out(text1.$$.fragment, local);
			transition_out(carat.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(section);
			destroy_component(text0);
			destroy_component(text1);
			destroy_component(carat);
		}
	};
}

class Mission extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Mission;