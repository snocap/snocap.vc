import './Home.svelte.css';
/* src/components/Home.svelte generated by Svelte v3.38.2 */
import {
	SvelteComponent,
	append,
	attr,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	safe_not_equal,
	space,
	text,
	transition_in,
	transition_out
} from "svelte/internal";

import "./lib/theme.css";
import Text from "./lib/Text.svelte.js";
import Carat from "./Carat.svelte.js";
import { FontFamily, TextSize, TextOrientation } from "./lib/types.js";

function create_default_slot_1(ctx) {
	let t0;
	let br;
	let t1;

	return {
		c() {
			t0 = text("We're not just system thinkers,");
			br = element("br");
			t1 = text("we're system builders");
		},
		m(target, anchor) {
			insert(target, t0, anchor);
			insert(target, br, anchor);
			insert(target, t1, anchor);
		},
		d(detaching) {
			if (detaching) detach(t0);
			if (detaching) detach(br);
			if (detaching) detach(t1);
		}
	};
}

// (15:3) <Text     title="Our Sectors"     family={FontFamily.Mono}     orientation={TextOrientation.Vertical}     size={TextSize.Small}    >
function create_default_slot(ctx) {
	let t;

	return {
		c() {
			t = text("Crypto ∙ Waste ∙ Food ∙ Ag ∙ Infrastructure");
		},
		m(target, anchor) {
			insert(target, t, anchor);
		},
		d(detaching) {
			if (detaching) detach(t);
		}
	};
}

function create_fragment(ctx) {
	let section;
	let div0;
	let text0;
	let t0;
	let div1;
	let aside;
	let text1;
	let t1;
	let video;
	let video_controls_value;
	let t2;
	let carat;
	let current;

	text0 = new Text({
			props: {
				"data-aos": "fade-left",
				class: "col-sm-offset-7 col-sm-5",
				size: TextSize.Aside,
				$$slots: { default: [create_default_slot_1] },
				$$scope: { ctx }
			}
		});

	text1 = new Text({
			props: {
				title: "Our Sectors",
				family: FontFamily.Mono,
				orientation: TextOrientation.Vertical,
				size: TextSize.Small,
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			}
		});

	carat = new Carat({ props: { fragment: "mission" } });

	return {
		c() {
			section = element("section");
			div0 = element("div");
			create_component(text0.$$.fragment);
			t0 = space();
			div1 = element("div");
			aside = element("aside");
			create_component(text1.$$.fragment);
			t1 = space();
			video = element("video");
			video.innerHTML = `<source src="/video/mountain_graded.mp4" type="video/mp4"/>`;
			t2 = space();
			create_component(carat.$$.fragment);
			attr(div0, "class", "row with-gutter svelte-1h3bjlk");
			attr(aside, "data-aos", "fade-right");
			attr(aside, "class", "svelte-1h3bjlk");
			video.playsInline = true;
			video.autoplay = true;
			video.muted = true;
			video.loop = true;
			video.controls = video_controls_value = false;
			attr(video, "class", "svelte-1h3bjlk");
			attr(div1, "class", "flex svelte-1h3bjlk");
			attr(section, "id", "home");
			attr(section, "data-header-content", "Powering platforms for <br/> a better climate future.");
			attr(section, "class", "svelte-1h3bjlk");
		},
		m(target, anchor) {
			insert(target, section, anchor);
			append(section, div0);
			mount_component(text0, div0, null);
			append(section, t0);
			append(section, div1);
			append(div1, aside);
			mount_component(text1, aside, null);
			append(div1, t1);
			append(div1, video);
			append(section, t2);
			mount_component(carat, section, null);
			current = true;
		},
		p(ctx, [dirty]) {
			const text0_changes = {};

			if (dirty & /*$$scope*/ 1) {
				text0_changes.$$scope = { dirty, ctx };
			}

			text0.$set(text0_changes);
			const text1_changes = {};

			if (dirty & /*$$scope*/ 1) {
				text1_changes.$$scope = { dirty, ctx };
			}

			text1.$set(text1_changes);
		},
		i(local) {
			if (current) return;
			transition_in(text0.$$.fragment, local);
			transition_in(text1.$$.fragment, local);
			transition_in(carat.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(text0.$$.fragment, local);
			transition_out(text1.$$.fragment, local);
			transition_out(carat.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(section);
			destroy_component(text0);
			destroy_component(text1);
			destroy_component(carat);
		}
	};
}

class Home extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Home;